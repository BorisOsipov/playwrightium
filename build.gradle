/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.com.microsoft.playwright.playwright
    api libs.org.slf4j.slf4j.api
    api libs.org.slf4j.slf4j.simple
    api libs.com.codeborne.selenide
    api libs.org.apache.commons.commons.text

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation('commons-io:commons-io:2.15.1')

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.10.1")
    testImplementation libs.org.assertj.assertj.core
    testImplementation libs.com.github.javafaker.javafaker
    testImplementation libs.io.github.cdimascio.dotenv.java
    testImplementation(platform('org.junit:junit-bom:5.10.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation libs.org.apache.commons.commons.text
}

group = 'io.github.britka'
version = '1.0.0'
description = 'playwright-webdriver'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
}

javadoc {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform() {
        filter {
            includeTestsMatching("org.brit.test.playwrightium.**")
            includeTestsMatching("org.brit.test.selenide.**")
        }
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
    reports {
        html.outputLocation = layout.buildDirectory.dir("reports")
    }
}

tasks.withType(Test).configureEach {
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

